{"version":3,"file":"static/js/168.19c7ddf7.chunk.js","mappings":"kMACA,EAAuB,sBAAvB,EAAqD,uBAArD,EAAmF,sB,SCwBnF,EAtBgB,WACd,IAAMA,GAAeC,EAAAA,EAAAA,GAAqB,YAE1C,OACE,8BACGD,IACEA,EAAaE,QAAQC,OAAS,GAC7B,wBACGH,EAAaE,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACxB,gBAAaC,UAAWC,EAAxB,WACE,eAAID,UAAWC,EAAf,2BAAwCH,MACxC,cAAGE,UAAWC,EAAd,SAA2BF,MAFpBF,EADe,OAQ5B,cAAGG,UAAWC,EAAd,wDAIT,C,0GClBKR,EAAuB,SAAAS,GAC3B,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOX,EAAP,KAAqBY,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEC,EAAAA,EAAAA,IAAkBJ,EAASH,GAF7B,OAEXQ,EAFW,OAGjBN,EAAgBM,GAHC,gDAIRC,EAJQ,KAIRA,SACTC,EAAAA,GAAAA,MAAYD,EAASD,KAAKG,SALT,yDAAH,qDAQlBL,GACD,GAAE,CAACH,EAASH,IACNV,CACR,EAED,MAEAC,EAAqBqB,aAAe,CAClCZ,KAAM,G,2KCvBKa,EAAa,kCAEpBC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QANQ,mCAORC,SAAU,WAIDC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACPP,EAASQ,IAAI,qBAAsB,CACxDL,OAAQ,CACNI,KAAAA,KAH0B,uBACtBb,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShBD,EAAiB,mCAAG,WAAOZ,EAAIK,GAAX,yFACRc,EAASQ,IAAT,gBAAsB3B,GAAtB,OAA2BK,IADnB,uBACvBQ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,wDAKjBe,EAAe,mCAAG,6GAAOF,EAAP,+BAAc,EAAGG,EAAjB,gCACNV,EAASQ,IAAI,eAAgB,CAClDL,OAAQ,CACNI,KAAAA,EACAG,MAAAA,EACAC,QAAS,qBALgB,uBACrBjB,EADqB,EACrBA,KADqB,kBAQtBA,GARsB,2CAAH,oD","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","shared/servises/FetchMovieDetails.jsx","shared/servises/film-app.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__DJKij\",\"title\":\"Reviews_title__t265C\",\"text\":\"Reviews_text__EqLvx\"};","import useFetchMovieDetails from 'shared/servises/FetchMovieDetails';\nimport style from './Reviews.module.css';\n\nconst Reviews = () => {\n  const movieDetails = useFetchMovieDetails('/reviews');\n\n  return (\n    <>\n      {movieDetails &&\n        (movieDetails.results.length > 0 ? (\n          <ul>\n            {movieDetails.results.map(({ id, author, content }) => (\n              <li key={id} className={style.item}>\n                <h3 className={style.title}>{`Author: ${author}`}</h3>\n                <p className={style.text}>{content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className={style.text}>We don't have any reviews for this movie</p>\n        ))}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'shared/servises/film-app';\nimport { toast } from 'react-toastify';\n\nconst useFetchMovieDetails = path => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId, path);\n        setMovieDetails(data);\n      } catch ({ response }) {\n        toast.error(response.data.message);\n      }\n    };\n    fetchDetails();\n  }, [movieId, path]);\n  return movieDetails;\n};\n\nexport default useFetchMovieDetails;\n\nuseFetchMovieDetails.defaultProps = {\n  path: '',\n};\n","import axios from 'axios';\n\nconst KEY = 'ca0d78fc8a47137eba1f3be4e5ed856b';\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getMoviesPopular = async (page = 1) => {\n  const { data } = await instance.get('trending/movie/day', {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async (id, path) => {\n  const { data } = await instance.get(`movie/${id}${path}`);\n  return data;\n};\n\nexport const getMoviesSearch = async (page = 1, query) => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page,\n      query,\n      sort_by: 'popularity.desc',\n    },\n  });\n  return data;\n};"],"names":["movieDetails","useFetchMovieDetails","results","length","map","id","author","content","className","style","path","useState","setMovieDetails","movieId","useParams","useEffect","fetchDetails","fetchMovieDetails","data","response","toast","message","defaultProps","baseImgUrl","instance","axios","baseURL","params","api_key","language","getMoviesPopular","page","get","getMoviesSearch","query","sort_by"],"sourceRoot":""}